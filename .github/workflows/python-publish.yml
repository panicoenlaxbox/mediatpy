name: Upload Python Package

on:
  workflow_dispatch:

jobs:
  mediatpy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - run: poetry install --no-interaction --no-root
    - name: check
      run: |
        poetry check
    - name: lock
      run: |
        poetry lock
    - name: isort
      run: |
        poetry run isort . --check-only --diff
    - name: black
      run: |
        poetry run black . --check
    - name: flake8
      run: |
        poetry run flake8p
    - name: mypy
      run: |
        poetry run mypy .
    - name: bandit
      run: |
        poetry run bandit .
    - name: pytest
      run: |
        poetry run pytest
    - name: build
      run: |
        poetry build -f wheel
    - name: version
      id: version
      run: |
        echo "::set-output name=version::$(poetry version --short)"
      shell: pwsh
    - name: publish
      run: |
        poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }} --skip-existing
    - name: tag
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/tags/${process.env.PUBLISHED_VERSION}`,
            sha: context.sha
          })
      env:
        PUBLISHED_VERSION: ${{ steps.version.outputs.version }}
      continue-on-error: true
